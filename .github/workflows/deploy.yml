name: Deploy to Minikube

on:
  push:
    branches:
      - main  # Change this to your default branch if needed

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker images
      run: |
        # Build the Docker images
        docker build -t alihdr116/single-crud-nodejs-mysql-client ./client
        docker build -t alihdr116/single-crud-nodejs-mysql-server ./server
        # Use the official MySQL image, no need to build since it is pulled from Docker Hub
        # Just make sure to tag correctly if you're using a specific version
        # docker pull mysql:8.0  # Optional, for clarity
        docker push alihdr116/single-crud-nodejs-mysql-client
        docker push alihdr116/single-crud-nodejs-mysql-server

    - name: Set up Minikube
      run: |
        curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
        sudo install minikube-linux-amd64 /usr/local/bin/minikube
        minikube start

    - name: Enable Ingress
      run: minikube addons enable ingress

    - name: Deploy to Minikube
      run: |
        # Create Kubernetes YAML files based on Docker Compose setup
        cat <<EOF > k8s/mysql-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - name: mysql
        image: mysql:8.0
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: "root"
        - name: MYSQL_DATABASE
          value: "crudmysql"
        - name: MYSQL_USER
          value: "ali"
        - name: MYSQL_PASSWORD
          value: "root"
        ports:
        - containerPort: 3306
        volumeMounts:
        - name: mysql-data
          mountPath: /var/lib/mysql
      volumes:
      - name: mysql-data
        emptyDir: {}
